(function(L,f,e,N,t,B,X,u,C,h){"use strict";var E={Failed:u.getAssetIDByName("Small"),Delete:u.getAssetIDByName("ic_message_delete"),Copy:u.getAssetIDByName("toast_copy_link"),Open:u.getAssetIDByName("ic_leave_stage"),Clipboard:u.getAssetIDByName("pending-alert"),Clock:u.getAssetIDByName("clock"),Forum:u.getAssetIDByName("ic_forum_channel"),Settings:{Toasts:{Settings:u.getAssetIDByName("ic_selection_checked_24px"),Failed:u.getAssetIDByName("ic_close_circle_24px")},Initial:u.getAssetIDByName("coffee"),Update:u.getAssetIDByName("discover"),Locale:u.getAssetIDByName("ic_locale_24px"),External:u.getAssetIDByName("ic_raised_hand_list"),Edit:u.getAssetIDByName("ic_edit_24px"),Reply:u.getAssetIDByName("ic_reply_24px"),Keyboard:u.getAssetIDByName("ic_keyboard_24px")}},R={shadow:function(a=.1){return{shadowColor:"#000",shadowOffset:{width:1,height:4},shadowOpacity:a,shadowRadius:4.65,elevation:8}},displayToast:function(a,r){e.toasts.open({content:r=="clipboard"?`Copied ${a} to clipboard.`:a,source:r=="clipboard"?E.Clipboard:E.Settings.Initial})}},U={plugin:{source:"https://github.com/S-cript-kiddie02/vendetta-plugins"},authors:{profile:{"Rosie<3":"https://github.com/acquitelol",MYSTRAVIL:"https://github.com/MYSTRAVIL/vendetta-plugins"}}};const{TouchableOpacity:O,View:F,Image:J,Text:_,Animated:P}=B.General,K=f.findByProps("transitionToGuild"),V=f.findByStoreName("UserStore"),Q=f.findByProps("showUserProfile"),m=e.stylesheet.createThemedStyleSheet({container:{marginTop:25,marginLeft:"5%",marginBottom:-15,flexDirection:"row"},textContainer:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap",...R.shadow()},image:{width:75,height:75,borderRadius:10,...R.shadow()},mainText:{opacity:.975,letterSpacing:.25},header:{color:C.semanticColors.HEADER_PRIMARY,fontFamily:e.constants.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},subHeader:{color:C.semanticColors.HEADER_SECONDARY,fontSize:12.75}});function Z({name:a,authors:r}){const s=e.React.useRef(new P.Value(1)).current,n=function(){return P.spring(s,{toValue:1.1,duration:10,useNativeDriver:!0}).start()},o=function(){return P.spring(s,{toValue:1,duration:250,useNativeDriver:!0}).start()},c=function(){return Q.showUserProfile({userId:V.getCurrentUser().id})},p={transform:[{scale:s}]};return e.React.createElement(e.React.Fragment,null,e.React.createElement(F,{style:m.container},e.React.createElement(O,{onPress:c,onPressIn:n,onPressOut:o},e.React.createElement(P.View,{style:p},e.React.createElement(J,{style:[m.image],source:{uri:V?.getCurrentUser()?.getAvatarURL()?.replace("webp","png")}}))),e.React.createElement(F,{style:m.textContainer},e.React.createElement(O,{onPress:function(){return K.openURL(U.plugin.source)}},e.React.createElement(_,{style:[m.mainText,m.header]},a)),e.React.createElement(F,{style:{flexDirection:"row"}},e.React.createElement(_,{style:[m.mainText,m.subHeader]},"A project by"),r.map(function(d,l,i){return e.React.createElement(O,{onPress:function(){return K.openURL(U.author.profile[d.name]??"https://github.com/")}},e.React.createElement(_,{style:[m.mainText,m.subHeader,{paddingLeft:4,fontFamily:e.constants.Fonts.DISPLAY_BOLD,flexDirection:"row"}]},d.name,l<i.length-1?",":null))})))))}const{View:ee,Text:te}=B.General,Y=e.stylesheet.createThemedStyleSheet({text:{color:C.semanticColors.HEADER_SECONDARY,paddingLeft:"5.5%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:e.constants.Fonts.PRIMARY_BOLD,fontSize:12}});function W({label:a,children:r}){return e.React.createElement(ee,{style:{marginTop:10}},e.React.createElement(te,{style:[Y.text,Y.optionText]},a.toUpperCase()),r)}const{FormRow:b,FormSwitch:A,FormDivider:D,FormInput:ae,FormText:re}=B.Forms,{ScrollView:ne,View:k,Text:se}=B.General,M=e.stylesheet.createThemedStyleSheet({icon:{color:C.semanticColors.INTERACTIVE_NORMAL},item:{color:C.semanticColors.TEXT_MUTED,fontFamily:e.constants.Fonts.PRIMARY_MEDIUM},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:C.semanticColors.BACKGROUND_MOBILE_SECONDARY,...R.shadow()},subheaderText:{color:C.semanticColors.HEADER_SECONDARY,textAlign:"center",margin:10,marginBottom:50,letterSpacing:.25,fontFamily:e.constants.Fonts.PRIMARY_BOLD,fontSize:14},image:{width:"100%",maxWidth:350,borderRadius:10}});function oe(){t.storage.tapUsernameMention===void 0&&(t.storage.tapUsernameMention=!1),t.storage.reply===void 0&&(t.storage.reply=!0),t.storage.userEdit===void 0&&(t.storage.userEdit=!0),t.storage.keyboardPopup===void 0&&(t.storage.keyboardPopup=!0),t.storage.delay===void 0&&(t.storage.delay="1000"),X.useProxy(t.storage);const a=e.ReactNative.Platform.OS==="android",r=function(n){/^\d*$/.test(n)&&(t.storage.delay=n)},s=function(){try{e.ReactNative.Linking&&e.ReactNative.Linking.openURL?e.ReactNative.Linking.openURL(U.plugin.source):R.displayToast("Cannot open URL: Linking not available","error")}catch(n){R.displayToast("Error opening URL","error"),console.error("Error opening URL:",n)}};return e.React.createElement(ne,null,e.React.createElement(Z,{name:t.manifest.name,authors:t.manifest.authors}),e.React.createElement(k,{style:{marginTop:20}},e.React.createElement(W,{label:"Preferences"},e.React.createElement(k,{style:[M.container]},e.React.createElement(b,{label:"Tap Username to Mention",subLabel:`Allows you to tap on a username to mention them instead of opening their profile.${a?" This option is disabled on Android.":""}`,onLongPress:function(){return R.displayToast("By default, Discord opens a profile when tapping on a username in chat. With this, it now mentions them, like on Android.","tooltip")},leading:e.React.createElement(b.Icon,{style:M.icon,source:t.storage.tapUsernameMention?E.Forum:E.Failed}),trailing:e.React.createElement(A,{value:a?!1:t.storage.tapUsernameMention,onValueChange:function(){a||(t.storage.tapUsernameMention=!t.storage.tapUsernameMention)}}),disabled:a}),e.React.createElement(D,null),e.React.createElement(b,{label:"Double Tap To Reply",subLabel:"Allows you to double tap on any messages to reply to them.",onLongPress:function(){return R.displayToast("Double tapping anyones message allows you to reply to them!","tooltip")},leading:e.React.createElement(b.Icon,{style:M.icon,source:t.storage.reply?E.Settings.Reply:E.Failed}),trailing:e.React.createElement(A,{value:t.storage.reply,onValueChange:function(){t.storage.reply=!t.storage.reply}})}),e.React.createElement(D,null),e.React.createElement(b,{label:"Open Keyboard Automatically",subLabel:"Opens the Keyboard when you reply to or edit a message with a double tap.",onLongPress:function(){return R.displayToast("Opens the Keyboard when you reply to or edit a message with a double tap.","tooltip")},leading:e.React.createElement(b.Icon,{style:M.icon,source:t.storage.keyboardPopup?E.Settings.Keyboard:E.Failed}),trailing:e.React.createElement(A,{value:t.storage.keyboardPopup,onValueChange:function(){t.storage.keyboardPopup=!t.storage.keyboardPopup}})}),e.React.createElement(D,null),e.React.createElement(b,{label:`${t.storage.userEdit?"Double tap to edit":"Double tap to reply to"} your own messages`,subLabel:`Allows you to double tap on any of your own messages to ${t.storage.userEdit?"edit":"reply to"} them.`,onLongPress:function(){return R.displayToast(`When double tapping on any of your own messages, you can now ${t.storage.userEdit?"edit them":"reply to them"}!`,"tooltip")},leading:e.React.createElement(b.Icon,{style:M.icon,source:t.storage.userEdit?E.Settings.Edit:E.Settings.Reply}),trailing:e.React.createElement(A,{value:t.storage.userEdit,onValueChange:function(){t.storage.userEdit=!t.storage.userEdit}})}),e.React.createElement(D,null),e.React.createElement(ae,{value:t.storage.delay,onChange:r,placeholder:"1000",title:"Maximum Delay",keyboardType:"numeric"}),e.React.createElement(D,null),e.React.createElement(re,{style:{padding:10}},"The maximum delay between taps until the double tap event is cancelled. This is 300ms by default."))),e.React.createElement(W,{label:"Source"},e.React.createElement(k,{style:M.container},e.React.createElement(b,{label:"Source",subLabel:`Open the repository of ${t.manifest.name} externally.`,onLongPress:function(){return R.displayToast(`Opens the repository of ${t.manifest.name} on GitHub in an external page to view any source code of the plugin.`,"tooltip")},leading:e.React.createElement(b.Icon,{style:M.icon,source:E.Open}),trailing:function(){return e.React.createElement(b.Arrow,null)},onPress:s})))),e.React.createElement(se,{style:M.subheaderText},`Build: (${t.manifest.hash?.substring(0,8)||"dev"}`))}const G=f.findByProps("insertText"),j=f.findByStoreName("ChannelStore"),H=f.findByStoreName("MessageStore"),$=f.findByStoreName("UserStore"),z=f.findByProps("sendMessage","startEditMessage"),q=f.findByProps("createPendingReply");let x;try{x=f.findByProps("MessagesHandlers")}catch{h.logger.warn("BetterChatGestures: Cannot find MessagesHandlers via findByProps")}if(!x){const a=window.vendetta?.metro?.cache||new Map;for(const[r,s]of a)if(s?.exports?.MessagesHandlers){x=s.exports,h.logger.log("BetterChatGestures: Found MessagesHandlers in cache iteration");break}}const v=x?.MessagesHandlers,ie={unpatchGetter:null,unpatchHandlers:null,currentTapIndex:0,currentMessageID:null,timeoutTap:null,patches:[],handlersInstances:new WeakSet,doubleTapState({state:a="UNKNOWN",nativeEvent:r}){try{const s={state:a,data:r};a==="INCOMPLETE"&&r&&Object.assign(s,{reason:{required:{taps:2,isAuthor:!0},received:{taps:r.taps,isAuthor:r.isAuthor}}});const n=$?.getCurrentUser();n&&t.manifest.authors.find(function(o){return o.id===n.id})&&console.log("DoubleTapState",s)}catch(s){h.logger.error("BetterChatGestures: Error in doubleTapState",s)}},resetTapState(){this.timeoutTap&&(clearTimeout(this.timeoutTap),this.timeoutTap=null),this.currentTapIndex=0,this.currentMessageID=null},openKeyboard(){if(t.storage.keyboardPopup)try{const a=f.findByProps("openSystemKeyboard");if(a?.openSystemKeyboard){a.openSystemKeyboard();return}if(a?.openSystemKeyboardForLastCreatedInput){a.openSystemKeyboardForLastCreatedInput();return}const r=G?.refs?.[0]?.current;if(r?.focus){r.focus();return}e.ReactNative.Keyboard?.dismiss&&setTimeout(function(){r?.focus&&r.focus()},50)}catch(a){t.storage.debugMode&&h.logger.error("BetterChatGestures: Error in openKeyboard",a)}},patchHandlers(a){var r=this;if(!this.handlersInstances.has(a)){this.handlersInstances.add(a);try{if(a.handleDoubleTapMessage){const s=N.instead("handleDoubleTapMessage",a,function(n,o){try{const c=n?.[0];if(!c?.nativeEvent)return o.apply(a,n);const{nativeEvent:p}=c,d=p.channelId,l=p.messageId;if(!d||!l)return o.apply(a,n);const i=H?.getMessage(d,l);if(!i)return o.apply(a,n);const g=$?.getCurrentUser();if(g&&i.author&&i.author.id===g.id&&t.storage.userEdit)z?.startEditMessage(d,l,i.content||"");else if(t.storage.reply){const w=j.getChannel(d);w&&q?.createPendingReply({channel:w,message:i,shouldMention:!0})}r.openKeyboard();return}catch(c){return h.logger.error("BetterChatGestures: Error in patched handleDoubleTapMessage",c),o.apply(a,n)}});this.patches.push(s)}if(a.handleTapUsername&&t.storage.tapUsernameMention){const s=N.instead("handleTapUsername",a,function(n,o){try{const c=n?.[0];if(!c?.nativeEvent)return o.apply(a,n);const p=G?.refs?.[0]?.current;if(!p?.props?.channel?.id)return o.apply(a,n);const d=H.getMessage(p.props.channel.id,c.nativeEvent.messageId);if(!d?.author)return o.apply(a,n);const l=d.author.discriminator!=="0"?`#${d.author.discriminator}`:"";G.insertText(`@${d.author.username}${l}`)}catch(c){return h.logger.error("BetterChatGestures: Error in patched handleTapUsername",c),o.apply(a,n)}});this.patches.push(s)}if(a.handleTapMessage){const s=N.instead("handleTapMessage",a,function(n,o){try{const c=n?.[0];if(!c?.nativeEvent)return o.apply(a,n);const p=c.nativeEvent,d=p.channelId,l=p.messageId;if(!d||!l)return o.apply(a,n);const i=H.getMessage(d,l);if(!i)return o.apply(a,n);const g=$?.getCurrentUser(),w=g&&i.author?i.author.id===g.id:!1;r.currentMessageID===l?r.currentTapIndex++:(r.resetTapState(),r.currentTapIndex=1,r.currentMessageID=l);let T=1e3;if(t.storage.delay){const y=parseInt(t.storage.delay,10);!isNaN(y)&&y>=200&&(T=y)}r.timeoutTap&&clearTimeout(r.timeoutTap),r.timeoutTap=setTimeout(function(){return r.resetTapState()},T);const I={...p,taps:r.currentTapIndex,content:i.content||"",authorId:i.author?.id,isAuthor:w};if(r.currentTapIndex!==2){r.doubleTapState({state:"INCOMPLETE",nativeEvent:I});return}if(r.resetTapState(),w&&t.storage.userEdit)z?.startEditMessage(d,l,I.content);else if(t.storage.reply){const y=j.getChannel(d);y&&q?.createPendingReply({channel:y,message:i,shouldMention:!0})}r.openKeyboard(),r.doubleTapState({state:"COMPLETE",nativeEvent:I});return}catch(c){return h.logger.error("BetterChatGestures: Error in patched handleTapMessage",c),o.apply(a,n)}});this.patches.push(s)}this.unpatchHandlers=function(){r.patches.forEach(function(s){try{s()}catch{}}),r.patches=[],r.handlersInstances=new WeakSet}}catch(s){h.logger.error("BetterChatGestures: Error in patchHandlers",s)}}},onLoad(){var a,r,s,n,o,c;v||h.logger.error("BetterChatGestures: MessagesHandlers not found \u2014 plugin may not function fully"),(a=t.storage).tapUsernameMention??(a.tapUsernameMention=e.ReactNative.Platform.select({android:!1,ios:!0,default:!0})),e.ReactNative.Platform.OS==="android"&&(t.storage.tapUsernameMention=!1),(r=t.storage).reply??(r.reply=!0),(s=t.storage).userEdit??(s.userEdit=!0),(n=t.storage).keyboardPopup??(n.keyboardPopup=!0),(o=t.storage).delay??(o.delay="1000"),(c=t.storage).debugMode??(c.debugMode=!0),(!t.storage.delay||isNaN(parseInt(t.storage.delay,10))||parseInt(t.storage.delay,10)<200)&&(t.storage.delay="1000"),h.logger.log("BetterChatGestures: init, delay =",t.storage.delay);const p=this,d=["params","handlers","_params","messageHandlers"];let l=null,i=null;for(const g of d)if(l=Object.getOwnPropertyDescriptor(v?.prototype||{},g)?.get,l){i=g,h.logger.log("BetterChatGestures: Found getter prop",g);break}if(l&&i){Object.defineProperty(v.prototype,i,{configurable:!0,get(){return this&&p.patchHandlers.call(p,this),l.call(this)}});const g=window.vendetta?.metro?.cache||new Map;for(const[w,T]of g)try{if(T?.exports)for(const I in T.exports){const y=T.exports[I];if(y?.prototype===v.prototype||y instanceof v){const S=y[i];S&&(p.patchHandlers.call(p,S),h.logger.log("BetterChatGestures: Patched existing handlers instance on load"))}}}catch{}this.unpatchGetter=function(){l&&i&&Object.defineProperty(v.prototype,i,{configurable:!0,get:l})}}else h.logger.warn("BetterChatGestures: Could not find MessagesHandlers getter");try{const g=window.vendetta?.metro?.cache||new Map;for(const[w,T]of g)if(T?.exports)for(const I in T.exports){const y=T.exports[I];if(typeof y=="function"){const S=I.toLowerCase();(S.includes("reaction")||S.includes("react")||S.includes("toggle")||S.includes("add")&&S.includes("react"))&&h.logger.log(`BetterChatGestures: found candidate reaction fn: ${I}`,y)}}}catch(g){h.logger.error("BetterChatGestures: error logging reaction candidates",g)}},onUnload(){this.resetTapState(),this.unpatchGetter&&this.unpatchGetter(),this.unpatchHandlers&&this.unpatchHandlers(),this.patches.forEach(function(a){try{a()}catch{}}),this.patches=[]},settings:oe};return L.default=ie,Object.defineProperty(L,"__esModule",{value:!0}),L})({},vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.plugin,vendetta.ui.components,vendetta.storage,vendetta.ui.assets,vendetta.ui,vendetta);
