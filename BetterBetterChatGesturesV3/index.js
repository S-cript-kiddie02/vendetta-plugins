(function(M,u,e,$,t,T,v,l,R,a){"use strict";var d={Failed:l.getAssetIDByName("Small"),Delete:l.getAssetIDByName("ic_message_delete"),Copy:l.getAssetIDByName("toast_copy_link"),Open:l.getAssetIDByName("ic_leave_stage"),Clipboard:l.getAssetIDByName("pending-alert"),Clock:l.getAssetIDByName("clock"),Forum:l.getAssetIDByName("ic_forum_channel"),Settings:{Toasts:{Settings:l.getAssetIDByName("ic_selection_checked_24px"),Failed:l.getAssetIDByName("ic_close_circle_24px")},Initial:l.getAssetIDByName("coffee"),Update:l.getAssetIDByName("discover"),Locale:l.getAssetIDByName("ic_locale_24px"),External:l.getAssetIDByName("ic_raised_hand_list"),Edit:l.getAssetIDByName("ic_edit_24px"),Reply:l.getAssetIDByName("ic_reply_24px"),Keyboard:l.getAssetIDByName("ic_keyboard_24px")}},y={shadow:function(r=.1){return{shadowColor:"#000",shadowOffset:{width:1,height:4},shadowOpacity:r,shadowRadius:4.65,elevation:8}},displayToast:function(r,s){e.toasts.open({content:s=="clipboard"?`Copied ${r} to clipboard.`:r,source:s=="clipboard"?d.Clipboard:d.Settings.Initial})}},P={plugin:{source:"https://github.com/S-cript-kiddie02/vendetta-plugins"},authors:{profile:{"Rosie<3":"https://github.com/acquitelol",MYSTRAVIL:"https://github.com/MYSTRAVIL/vendetta-plugins"}}};const{TouchableOpacity:L,View:D,Image:V,Text:G,Animated:A}=T.General,U=u.findByProps("transitionToGuild"),x=u.findByStoreName("UserStore"),K=u.findByProps("showUserProfile"),f=e.stylesheet.createThemedStyleSheet({container:{marginTop:25,marginLeft:"5%",marginBottom:-15,flexDirection:"row"},textContainer:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap",...y.shadow()},image:{width:75,height:75,borderRadius:10,...y.shadow()},mainText:{opacity:.975,letterSpacing:.25},header:{color:R.semanticColors.HEADER_PRIMARY,fontFamily:e.constants.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},subHeader:{color:R.semanticColors.HEADER_SECONDARY,fontSize:12.75}});function Y({name:r,authors:s}){const n=e.React.useRef(new A.Value(1)).current,i=function(){return A.spring(n,{toValue:1.1,duration:10,useNativeDriver:!0}).start()},o=function(){return A.spring(n,{toValue:1,duration:250,useNativeDriver:!0}).start()},c=function(){return K.showUserProfile({userId:x.getCurrentUser().id})},p={transform:[{scale:n}]};return e.React.createElement(e.React.Fragment,null,e.React.createElement(D,{style:f.container},e.React.createElement(L,{onPress:c,onPressIn:i,onPressOut:o},e.React.createElement(A.View,{style:p},e.React.createElement(V,{style:[f.image],source:{uri:x?.getCurrentUser()?.getAvatarURL()?.replace("webp","png")}}))),e.React.createElement(D,{style:f.textContainer},e.React.createElement(L,{onPress:function(){return U.openURL(P.plugin.source)}},e.React.createElement(G,{style:[f.mainText,f.header]},r)),e.React.createElement(D,{style:{flexDirection:"row"}},e.React.createElement(G,{style:[f.mainText,f.subHeader]},"A project by"),s.map(function(C,h,B){return e.React.createElement(L,{onPress:function(){return U.openURL(P.author.profile[C.name]??"https://github.com/")}},e.React.createElement(G,{style:[f.mainText,f.subHeader,{paddingLeft:4,fontFamily:e.constants.Fonts.DISPLAY_BOLD,flexDirection:"row"}]},C.name,h<B.length-1?",":null))})))))}const{View:j,Text:W}=T.General,k=e.stylesheet.createThemedStyleSheet({text:{color:R.semanticColors.HEADER_SECONDARY,paddingLeft:"5.5%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:e.constants.Fonts.PRIMARY_BOLD,fontSize:12}});function O({label:r,children:s}){return e.React.createElement(j,{style:{marginTop:10}},e.React.createElement(W,{style:[k.text,k.optionText]},r.toUpperCase()),s)}const{FormRow:g,FormSwitch:w,FormDivider:m,FormInput:_,FormText:z}=T.Forms,{ScrollView:q,View:N,Text:X}=T.General,E=e.stylesheet.createThemedStyleSheet({icon:{color:R.semanticColors.INTERACTIVE_NORMAL},item:{color:R.semanticColors.TEXT_MUTED,fontFamily:e.constants.Fonts.PRIMARY_MEDIUM},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:R.semanticColors.BACKGROUND_MOBILE_SECONDARY,...y.shadow()},subheaderText:{color:R.semanticColors.HEADER_SECONDARY,textAlign:"center",margin:10,marginBottom:50,letterSpacing:.25,fontFamily:e.constants.Fonts.PRIMARY_BOLD,fontSize:14},image:{width:"100%",maxWidth:350,borderRadius:10}});function J(){t.storage.tapUsernameMention===void 0&&(t.storage.tapUsernameMention=!1),t.storage.reply===void 0&&(t.storage.reply=!0),t.storage.userEdit===void 0&&(t.storage.userEdit=!0),t.storage.keyboardPopup===void 0&&(t.storage.keyboardPopup=!0),t.storage.delay===void 0&&(t.storage.delay="1000"),v.useProxy(t.storage);const r=e.ReactNative.Platform.OS==="android",s=function(i){/^\d*$/.test(i)&&(t.storage.delay=i)},n=function(){try{e.ReactNative.Linking&&e.ReactNative.Linking.openURL?e.ReactNative.Linking.openURL(P.plugin.source):y.displayToast("Cannot open URL: Linking not available","error")}catch(i){y.displayToast("Error opening URL","error"),console.error("Error opening URL:",i)}};return e.React.createElement(q,null,e.React.createElement(Y,{name:t.manifest.name,authors:t.manifest.authors}),e.React.createElement(N,{style:{marginTop:20}},e.React.createElement(O,{label:"Preferences"},e.React.createElement(N,{style:[E.container]},e.React.createElement(g,{label:"Tap Username to Mention",subLabel:`Allows you to tap on a username to mention them instead of opening their profile.${r?" This option is disabled on Android.":""}`,onLongPress:function(){return y.displayToast("By default, Discord opens a profile when tapping on a username in chat. With this, it now mentions them, like on Android.","tooltip")},leading:e.React.createElement(g.Icon,{style:E.icon,source:t.storage.tapUsernameMention?d.Forum:d.Failed}),trailing:e.React.createElement(w,{value:r?!1:t.storage.tapUsernameMention,onValueChange:function(){r||(t.storage.tapUsernameMention=!t.storage.tapUsernameMention)}}),disabled:r}),e.React.createElement(m,null),e.React.createElement(g,{label:"Double Tap To Reply",subLabel:"Allows you to double tap on any messages to reply to them.",onLongPress:function(){return y.displayToast("Double tapping anyones message allows you to reply to them!","tooltip")},leading:e.React.createElement(g.Icon,{style:E.icon,source:t.storage.reply?d.Settings.Reply:d.Failed}),trailing:e.React.createElement(w,{value:t.storage.reply,onValueChange:function(){t.storage.reply=!t.storage.reply}})}),e.React.createElement(m,null),e.React.createElement(g,{label:"Open Keyboard Automatically",subLabel:"Opens the Keyboard when you reply to or edit a message with a double tap.",onLongPress:function(){return y.displayToast("Opens the Keyboard when you reply to or edit a message with a double tap.","tooltip")},leading:e.React.createElement(g.Icon,{style:E.icon,source:t.storage.keyboardPopup?d.Settings.Keyboard:d.Failed}),trailing:e.React.createElement(w,{value:t.storage.keyboardPopup,onValueChange:function(){t.storage.keyboardPopup=!t.storage.keyboardPopup}})}),e.React.createElement(m,null),e.React.createElement(g,{label:`${t.storage.userEdit?"Double tap to edit":"Double tap to reply to"} your own messages`,subLabel:`Allows you to double tap on any of your own messages to ${t.storage.userEdit?"edit":"reply to"} them.`,onLongPress:function(){return y.displayToast(`When double tapping on any of your own messages, you can now ${t.storage.userEdit?"edit them":"reply to them"}!`,"tooltip")},leading:e.React.createElement(g.Icon,{style:E.icon,source:t.storage.userEdit?d.Settings.Edit:d.Settings.Reply}),trailing:e.React.createElement(w,{value:t.storage.userEdit,onValueChange:function(){t.storage.userEdit=!t.storage.userEdit}})}),e.React.createElement(m,null),e.React.createElement(_,{value:t.storage.delay,onChange:s,placeholder:"1000",title:"Maximum Delay",keyboardType:"numeric"}),e.React.createElement(m,null),e.React.createElement(z,{style:{padding:10}},"The maximum delay between taps until the double tap event is cancelled. This is 300ms by default."))),e.React.createElement(O,{label:"Source"},e.React.createElement(N,{style:E.container},e.React.createElement(g,{label:"Source",subLabel:`Open the repository of ${t.manifest.name} externally.`,onLongPress:function(){return y.displayToast(`Opens the repository of ${t.manifest.name} on GitHub in an external page to view any source code of the plugin.`,"tooltip")},leading:e.React.createElement(g.Icon,{style:E.icon,source:d.Open}),trailing:function(){return e.React.createElement(g.Arrow,null)},onPress:n})))),e.React.createElement(X,{style:E.subheaderText},`Build: (${t.manifest.hash?.substring(0,8)||"dev"}`))}const F=u.findByProps("insertText"),Q=u.findByStoreName("ChannelStore"),Z=u.findByStoreName("MessageStore"),H=u.findByStoreName("UserStore"),ee=u.findByProps("sendMessage","startEditMessage"),te=u.findByProps("createPendingReply");a.logger.log("BetterChatGestures: Modules found:",{ChatInputRef:!!F,ChannelStore:!!Q,MessageStore:!!Z,UserStore:!!H,Messages:!!ee,ReplyManager:!!te});let I;try{I=u.findByProps("MessagesHandlers"),a.logger.log("BetterChatGestures: Found MessagesHandlers via findByProps")}catch(r){a.logger.warn("BetterChatGestures: Could not find MessagesHandlers via findByProps",r)}if(!I)try{const r=window.vendetta?.metro?.cache||new Map;for(const[s,n]of r)if(n?.exports?.MessagesHandlers){I=n.exports,a.logger.log("BetterChatGestures: Found MessagesHandlers via cache iteration");break}}catch(r){a.logger.error("BetterChatGestures: Failed to find MessagesHandlers via cache",r)}const S=I?.MessagesHandlers;a.logger.log("BetterChatGestures: MessagesHandlers exists:",!!S);const re={unpatchGetter:null,unpatchHandlers:null,currentTapIndex:0,currentMessageID:null,timeoutTap:null,patches:[],handlersInstances:new WeakSet,doubleTapState({state:r="UNKNOWN",nativeEvent:s}){try{const n={state:r,data:s};r==="INCOMPLETE"&&s&&Object.assign(n,{reason:{required:{taps:2,isAuthor:!0},received:{taps:s.taps,isAuthor:s.isAuthor}}});const i=H?.getCurrentUser();i&&t.manifest.authors.find(function(o){return o.id===i.id})&&console.log("DoubleTapState",n)}catch(n){a.logger.error("BetterChatGestures: Error in doubleTapState",n)}},resetTapState(){try{this.timeoutTap&&(clearTimeout(this.timeoutTap),this.timeoutTap=null),this.currentTapIndex=0,this.currentMessageID=null}catch(r){a.logger.error("BetterChatGestures: Error in resetTapState",r)}},openKeyboard(){if(t.storage.keyboardPopup)try{const r=u.findByProps("openSystemKeyboard");if(r?.openSystemKeyboard){r.openSystemKeyboard();return}if(r?.openSystemKeyboardForLastCreatedInput){r.openSystemKeyboardForLastCreatedInput();return}const s=F?.refs?.[0]?.current;if(s?.focus){s.focus();return}e.ReactNative.Keyboard?.dismiss&&setTimeout(function(){s?.focus&&s.focus()},50)}catch(r){t.storage.debugMode&&a.logger.error("BetterChatGestures: Error opening keyboard",r)}},patchHandlers(r){var s=this;if(a.logger.log("BetterChatGestures: patchHandlers called"),this.handlersInstances.has(r)){a.logger.log("BetterChatGestures: Handlers already patched, skipping");return}this.handlersInstances.add(r);try{a.logger.log("BetterChatGestures: ===== FULL HANDLERS ANALYSIS ====="),a.logger.log("BetterChatGestures: Type of handlers:",typeof r),a.logger.log("BetterChatGestures: Is array?",Array.isArray(r));const n=Object.keys(r);a.logger.log("BetterChatGestures: All keys:",n),n.forEach(function(o){const c=r[o],p=typeof c;if(a.logger.log(`BetterChatGestures: - ${o}: ${p}`,c),p==="object"&&c!==null&&!Array.isArray(c)){const C=Object.keys(c);a.logger.log(`BetterChatGestures:   \u2192 Sub-keys of ${o}:`,C),C.forEach(function(h){a.logger.log(`BetterChatGestures:     - ${h}: ${typeof c[h]}`)})}}),a.logger.log("BetterChatGestures: ===== END ANALYSIS =====");const i=n.filter(function(o){return typeof r[o]=="function"&&(o.toLowerCase().includes("tap")||o.toLowerCase().includes("press")||o.toLowerCase().includes("click")||o.toLowerCase().includes("message"))});if(a.logger.log("BetterChatGestures: Potential tap-related methods:",i),r.getMessage){a.logger.log("BetterChatGestures: Patching getMessage for exploration");const o=$.after("getMessage",r,function(c,p){a.logger.log("BetterChatGestures: getMessage called with args:",c),a.logger.log("BetterChatGestures: getMessage result:",p)});this.patches.push(o)}this.unpatchHandlers=function(){try{a.logger.log("BetterChatGestures: Unpatching handlers"),s.patches.forEach(function(o){typeof o=="function"&&o()}),s.patches=[],s.handlersInstances=new WeakSet}catch(o){a.logger.error("BetterChatGestures: Error in unpatchHandlers",o)}}}catch(n){a.logger.error("BetterChatGestures: Error in patchHandlers",n)}},onLoad(){var r,s,n,i,o,c;try{if(a.logger.log("BetterChatGestures: onLoad called"),!S){a.logger.error("BetterChatGestures: MessagesHandlers module not found! Plugin will not work.");return}(r=t.storage).tapUsernameMention??(r.tapUsernameMention=e.ReactNative.Platform.select({android:!1,ios:!0,default:!0})),e.ReactNative.Platform.OS==="android"&&(t.storage.tapUsernameMention=!1),(s=t.storage).reply??(s.reply=!0),(n=t.storage).userEdit??(n.userEdit=!0),(i=t.storage).keyboardPopup??(i.keyboardPopup=!0),(o=t.storage).delay??(o.delay="1000"),(c=t.storage).debugMode??(c.debugMode=!1),(!t.storage.delay||t.storage.delay===""||isNaN(parseInt(t.storage.delay,10))||parseInt(t.storage.delay,10)<200)&&(t.storage.delay="1000"),a.logger.log("BetterChatGestures: Configuration:",{reply:t.storage.reply,userEdit:t.storage.userEdit,keyboardPopup:t.storage.keyboardPopup,delay:t.storage.delay,tapUsernameMention:t.storage.tapUsernameMention,debugMode:t.storage.debugMode});const p=this,C=["params","handlers","_params","messageHandlers"];let h=null,B=null;for(const b of C)if(h=Object.getOwnPropertyDescriptor(S.prototype,b)?.get,h){B=b,a.logger.log(`BetterChatGestures: Found property '${b}'`);break}if(!h||!B){a.logger.error("BetterChatGestures: Could not find params getter!");return}Object.defineProperty(S.prototype,B,{configurable:!0,get(){const b=h.call(this);return this&&b&&p.patchHandlers.call(p,b),b}}),this.unpatchGetter=function(){try{h&&B&&Object.defineProperty(S.prototype,B,{configurable:!0,get:h})}catch(b){a.logger.error("BetterChatGestures: Error in unpatchGetter",b)}},a.logger.log("BetterChatGestures: onLoad completed successfully")}catch(p){a.logger.error("BetterChatGestures: Error in onLoad",p)}},onUnload(){try{a.logger.log("BetterChatGestures: onUnload called"),this.resetTapState(),this.unpatchGetter&&this.unpatchGetter(),this.unpatchHandlers&&this.unpatchHandlers(),this.timeoutTap&&(clearTimeout(this.timeoutTap),this.timeoutTap=null),a.logger.log("BetterChatGestures: onUnload completed")}catch(r){a.logger.error("BetterChatGestures: Error in onUnload",r)}},settings:J};return M.default=re,Object.defineProperty(M,"__esModule",{value:!0}),M})({},vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.plugin,vendetta.ui.components,vendetta.storage,vendetta.ui.assets,vendetta.ui,vendetta);
