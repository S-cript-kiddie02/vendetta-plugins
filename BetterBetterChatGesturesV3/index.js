(function(L,y,r,N,t,M,q,p,R,e){"use strict";var f={Failed:p.getAssetIDByName("Small"),Delete:p.getAssetIDByName("ic_message_delete"),Copy:p.getAssetIDByName("toast_copy_link"),Open:p.getAssetIDByName("ic_leave_stage"),Clipboard:p.getAssetIDByName("pending-alert"),Clock:p.getAssetIDByName("clock"),Forum:p.getAssetIDByName("ic_forum_channel"),Settings:{Toasts:{Settings:p.getAssetIDByName("ic_selection_checked_24px"),Failed:p.getAssetIDByName("ic_close_circle_24px")},Initial:p.getAssetIDByName("coffee"),Update:p.getAssetIDByName("discover"),Locale:p.getAssetIDByName("ic_locale_24px"),External:p.getAssetIDByName("ic_raised_hand_list"),Edit:p.getAssetIDByName("ic_edit_24px"),Reply:p.getAssetIDByName("ic_reply_24px"),Keyboard:p.getAssetIDByName("ic_keyboard_24px")}},b={shadow:function(a=.1){return{shadowColor:"#000",shadowOffset:{width:1,height:4},shadowOpacity:a,shadowRadius:4.65,elevation:8}},displayToast:function(a,s){r.toasts.open({content:s=="clipboard"?`Copied ${a} to clipboard.`:a,source:s=="clipboard"?f.Clipboard:f.Settings.Initial})}},x={plugin:{source:"https://github.com/S-cript-kiddie02/vendetta-plugins"},authors:{profile:{"Rosie<3":"https://github.com/acquitelol",MYSTRAVIL:"https://github.com/MYSTRAVIL/vendetta-plugins"}}};const{TouchableOpacity:O,View:k,Image:X,Text:F,Animated:S}=M.General,j=y.findByProps("transitionToGuild"),W=y.findByStoreName("UserStore"),J=y.findByProps("showUserProfile"),E=r.stylesheet.createThemedStyleSheet({container:{marginTop:25,marginLeft:"5%",marginBottom:-15,flexDirection:"row"},textContainer:{paddingLeft:15,paddingTop:5,flexDirection:"column",flexWrap:"wrap",...b.shadow()},image:{width:75,height:75,borderRadius:10,...b.shadow()},mainText:{opacity:.975,letterSpacing:.25},header:{color:R.semanticColors.HEADER_PRIMARY,fontFamily:r.constants.Fonts.DISPLAY_BOLD,fontSize:25,letterSpacing:.25},subHeader:{color:R.semanticColors.HEADER_SECONDARY,fontSize:12.75}});function Q({name:a,authors:s}){const o=r.React.useRef(new S.Value(1)).current,n=function(){return S.spring(o,{toValue:1.1,duration:10,useNativeDriver:!0}).start()},c=function(){return S.spring(o,{toValue:1,duration:250,useNativeDriver:!0}).start()},u=function(){return J.showUserProfile({userId:W.getCurrentUser().id})},g={transform:[{scale:o}]};return r.React.createElement(r.React.Fragment,null,r.React.createElement(k,{style:E.container},r.React.createElement(O,{onPress:u,onPressIn:n,onPressOut:c},r.React.createElement(S.View,{style:g},r.React.createElement(X,{style:[E.image],source:{uri:W?.getCurrentUser()?.getAvatarURL()?.replace("webp","png")}}))),r.React.createElement(k,{style:E.textContainer},r.React.createElement(O,{onPress:function(){return j.openURL(x.plugin.source)}},r.React.createElement(F,{style:[E.mainText,E.header]},a)),r.React.createElement(k,{style:{flexDirection:"row"}},r.React.createElement(F,{style:[E.mainText,E.subHeader]},"A project by"),s.map(function(d,l,h){return r.React.createElement(O,{onPress:function(){return j.openURL(x.author.profile[d.name]??"https://github.com/")}},r.React.createElement(F,{style:[E.mainText,E.subHeader,{paddingLeft:4,fontFamily:r.constants.Fonts.DISPLAY_BOLD,flexDirection:"row"}]},d.name,l<h.length-1?",":null))})))))}const{View:Z,Text:_}=M.General,v=r.stylesheet.createThemedStyleSheet({text:{color:R.semanticColors.HEADER_SECONDARY,paddingLeft:"5.5%",paddingRight:10,marginBottom:10,letterSpacing:.25,fontFamily:r.constants.Fonts.PRIMARY_BOLD,fontSize:12}});function z({label:a,children:s}){return r.React.createElement(Z,{style:{marginTop:10}},r.React.createElement(_,{style:[v.text,v.optionText]},a.toUpperCase()),s)}const{FormRow:C,FormSwitch:I,FormDivider:G,FormInput:ee,FormText:te}=M.Forms,{ScrollView:re,View:H,Text:ae}=M.General,B=r.stylesheet.createThemedStyleSheet({icon:{color:R.semanticColors.INTERACTIVE_NORMAL},item:{color:R.semanticColors.TEXT_MUTED,fontFamily:r.constants.Fonts.PRIMARY_MEDIUM},container:{width:"90%",marginLeft:"5%",borderRadius:10,backgroundColor:R.semanticColors.BACKGROUND_MOBILE_SECONDARY,...b.shadow()},subheaderText:{color:R.semanticColors.HEADER_SECONDARY,textAlign:"center",margin:10,marginBottom:50,letterSpacing:.25,fontFamily:r.constants.Fonts.PRIMARY_BOLD,fontSize:14},image:{width:"100%",maxWidth:350,borderRadius:10}});function se(){t.storage.tapUsernameMention===void 0&&(t.storage.tapUsernameMention=!1),t.storage.reply===void 0&&(t.storage.reply=!0),t.storage.userEdit===void 0&&(t.storage.userEdit=!0),t.storage.keyboardPopup===void 0&&(t.storage.keyboardPopup=!0),t.storage.delay===void 0&&(t.storage.delay="1000"),q.useProxy(t.storage);const a=r.ReactNative.Platform.OS==="android",s=function(n){/^\d*$/.test(n)&&(t.storage.delay=n)},o=function(){try{r.ReactNative.Linking&&r.ReactNative.Linking.openURL?r.ReactNative.Linking.openURL(x.plugin.source):b.displayToast("Cannot open URL: Linking not available","error")}catch(n){b.displayToast("Error opening URL","error"),console.error("Error opening URL:",n)}};return r.React.createElement(re,null,r.React.createElement(Q,{name:t.manifest.name,authors:t.manifest.authors}),r.React.createElement(H,{style:{marginTop:20}},r.React.createElement(z,{label:"Preferences"},r.React.createElement(H,{style:[B.container]},r.React.createElement(C,{label:"Tap Username to Mention",subLabel:`Allows you to tap on a username to mention them instead of opening their profile.${a?" This option is disabled on Android.":""}`,onLongPress:function(){return b.displayToast("By default, Discord opens a profile when tapping on a username in chat. With this, it now mentions them, like on Android.","tooltip")},leading:r.React.createElement(C.Icon,{style:B.icon,source:t.storage.tapUsernameMention?f.Forum:f.Failed}),trailing:r.React.createElement(I,{value:a?!1:t.storage.tapUsernameMention,onValueChange:function(){a||(t.storage.tapUsernameMention=!t.storage.tapUsernameMention)}}),disabled:a}),r.React.createElement(G,null),r.React.createElement(C,{label:"Double Tap To Reply",subLabel:"Allows you to double tap on any messages to reply to them.",onLongPress:function(){return b.displayToast("Double tapping anyones message allows you to reply to them!","tooltip")},leading:r.React.createElement(C.Icon,{style:B.icon,source:t.storage.reply?f.Settings.Reply:f.Failed}),trailing:r.React.createElement(I,{value:t.storage.reply,onValueChange:function(){t.storage.reply=!t.storage.reply}})}),r.React.createElement(G,null),r.React.createElement(C,{label:"Open Keyboard Automatically",subLabel:"Opens the Keyboard when you reply to or edit a message with a double tap.",onLongPress:function(){return b.displayToast("Opens the Keyboard when you reply to or edit a message with a double tap.","tooltip")},leading:r.React.createElement(C.Icon,{style:B.icon,source:t.storage.keyboardPopup?f.Settings.Keyboard:f.Failed}),trailing:r.React.createElement(I,{value:t.storage.keyboardPopup,onValueChange:function(){t.storage.keyboardPopup=!t.storage.keyboardPopup}})}),r.React.createElement(G,null),r.React.createElement(C,{label:`${t.storage.userEdit?"Double tap to edit":"Double tap to reply to"} your own messages`,subLabel:`Allows you to double tap on any of your own messages to ${t.storage.userEdit?"edit":"reply to"} them.`,onLongPress:function(){return b.displayToast(`When double tapping on any of your own messages, you can now ${t.storage.userEdit?"edit them":"reply to them"}!`,"tooltip")},leading:r.React.createElement(C.Icon,{style:B.icon,source:t.storage.userEdit?f.Settings.Edit:f.Settings.Reply}),trailing:r.React.createElement(I,{value:t.storage.userEdit,onValueChange:function(){t.storage.userEdit=!t.storage.userEdit}})}),r.React.createElement(G,null),r.React.createElement(ee,{value:t.storage.delay,onChange:s,placeholder:"1000",title:"Maximum Delay",keyboardType:"numeric"}),r.React.createElement(G,null),r.React.createElement(te,{style:{padding:10}},"The maximum delay between taps until the double tap event is cancelled. This is 300ms by default."))),r.React.createElement(z,{label:"Source"},r.React.createElement(H,{style:B.container},r.React.createElement(C,{label:"Source",subLabel:`Open the repository of ${t.manifest.name} externally.`,onLongPress:function(){return b.displayToast(`Opens the repository of ${t.manifest.name} on GitHub in an external page to view any source code of the plugin.`,"tooltip")},leading:r.React.createElement(C.Icon,{style:B.icon,source:f.Open}),trailing:function(){return r.React.createElement(C.Arrow,null)},onPress:o})))),r.React.createElement(ae,{style:B.subheaderText},`Build: (${t.manifest.hash?.substring(0,8)||"dev"}`))}const D=y.findByProps("insertText"),$=y.findByStoreName("ChannelStore"),P=y.findByStoreName("MessageStore"),w=y.findByStoreName("UserStore"),K=y.findByProps("sendMessage","startEditMessage"),A=y.findByProps("createPendingReply");e.logger.log("BetterChatGestures: Modules found:",{ChatInputRef:!!D,ChannelStore:!!$,MessageStore:!!P,UserStore:!!w,Messages:!!K,ReplyManager:!!A});let U;try{U=y.findByProps("MessagesHandlers"),e.logger.log("BetterChatGestures: Found MessagesHandlers via findByProps")}catch(a){e.logger.warn("BetterChatGestures: Could not find MessagesHandlers via findByProps",a)}if(!U)try{const a=window.vendetta?.metro?.cache||new Map;for(const[s,o]of a)if(o?.exports?.MessagesHandlers){U=o.exports,e.logger.log("BetterChatGestures: Found MessagesHandlers via cache iteration");break}}catch(a){e.logger.error("BetterChatGestures: Failed to find MessagesHandlers via cache",a)}const m=U?.MessagesHandlers;e.logger.log("BetterChatGestures: MessagesHandlers exists:",!!m);const oe={unpatchGetter:null,unpatchHandlers:null,currentTapIndex:0,currentMessageID:null,timeoutTap:null,patches:[],handlersInstances:new WeakSet,doubleTapState({state:a="UNKNOWN",nativeEvent:s}){try{const o={state:a,data:s};a==="INCOMPLETE"&&s&&Object.assign(o,{reason:{required:{taps:2,isAuthor:!0},received:{taps:s.taps,isAuthor:s.isAuthor}}});const n=w?.getCurrentUser();n&&t.manifest.authors.find(function(c){return c.id===n.id})&&console.log("DoubleTapState",o)}catch(o){e.logger.error("BetterChatGestures: Error in doubleTapState",o)}},resetTapState(){try{this.timeoutTap&&(clearTimeout(this.timeoutTap),this.timeoutTap=null),this.currentTapIndex=0,this.currentMessageID=null}catch(a){e.logger.error("BetterChatGestures: Error in resetTapState",a)}},openKeyboard(){if(e.logger.log("BetterChatGestures: openKeyboard called, keyboardPopup =",t.storage.keyboardPopup),!!t.storage.keyboardPopup)try{const a=y.findByProps("openSystemKeyboard");if(e.logger.log("BetterChatGestures: keyboardModule found:",!!a),a?.openSystemKeyboard){e.logger.log("BetterChatGestures: Calling openSystemKeyboard"),a.openSystemKeyboard();return}if(a?.openSystemKeyboardForLastCreatedInput){e.logger.log("BetterChatGestures: Calling openSystemKeyboardForLastCreatedInput"),a.openSystemKeyboardForLastCreatedInput();return}const s=D?.refs?.[0]?.current;if(s?.focus){e.logger.log("BetterChatGestures: Calling ChatInput.focus()"),s.focus();return}r.ReactNative.Keyboard?.dismiss&&(e.logger.log("BetterChatGestures: Using ReactNative.Keyboard"),setTimeout(function(){s?.focus&&s.focus()},50))}catch(a){t.storage.debugMode&&e.logger.error("BetterChatGestures: Error opening keyboard",a)}},patchHandlers(a){var s=this;if(e.logger.log("BetterChatGestures: patchHandlers called"),e.logger.log("BetterChatGestures: handlers object:",a),e.logger.log("BetterChatGestures: Already patched?",this.handlersInstances.has(a)),this.handlersInstances.has(a)){e.logger.log("BetterChatGestures: Handlers already patched, skipping");return}this.handlersInstances.add(a);try{if(e.logger.log("BetterChatGestures: Available handler methods:",Object.keys(a).filter(function(o){return typeof a[o]=="function"})),a.handleDoubleTapMessage){e.logger.log("BetterChatGestures: Patching handleDoubleTapMessage");const o=N.instead("handleDoubleTapMessage",a,function(n,c){try{if(e.logger.log("BetterChatGestures: handleDoubleTapMessage intercepted!",n),!n?.[0]?.nativeEvent){e.logger.warn("BetterChatGestures: No nativeEvent in args");return}const{nativeEvent:u}=n[0],g=u.channelId,d=u.messageId;if(e.logger.log("BetterChatGestures: ChannelID:",g,"MessageID:",d),!g||!d)return;const l=$?.getChannel(g),h=P?.getMessage(g,d);if(e.logger.log("BetterChatGestures: Channel:",!!l,"Message:",!!h),!h)return;const i=w?.getCurrentUser(),T=i&&h.author?h.author.id===i.id:!1;e.logger.log("BetterChatGestures: isAuthor:",T,"userEdit:",t.storage.userEdit,"reply:",t.storage.reply),T&&t.storage.userEdit?(e.logger.log("BetterChatGestures: Starting edit message"),K?.startEditMessage(g,d,h.content||"")):t.storage.reply&&l&&(e.logger.log("BetterChatGestures: Creating pending reply"),A?.createPendingReply({channel:l,message:h,shouldMention:!0})),s.openKeyboard();return}catch(u){e.logger.error("BetterChatGestures: Error in handleDoubleTapMessage patch",u)}});this.patches.push(o),e.logger.log("BetterChatGestures: handleDoubleTapMessage patched successfully")}else e.logger.warn("BetterChatGestures: handleDoubleTapMessage not found in handlers");if(a.handleTapUsername&&t.storage.tapUsernameMention){e.logger.log("BetterChatGestures: Patching handleTapUsername");const o=N.instead("handleTapUsername",a,function(n,c){try{if(e.logger.log("BetterChatGestures: handleTapUsername intercepted"),!t.storage.tapUsernameMention||!n?.[0]?.nativeEvent)return c.apply(a,n);const u=D?.refs?.[0]?.current,{messageId:g}=n[0].nativeEvent;if(!u?.props?.channel?.id)return c.apply(a,n);const d=P.getMessage(u.props.channel.id,g);if(!d?.author)return c.apply(a,n);const l=d.author.discriminator!=="0"?`#${d.author.discriminator}`:"";D.insertText(`@${d.author.username}${l}`)}catch(u){return e.logger.error("BetterChatGestures: Error in handleTapUsername patch",u),c.apply(a,n)}});this.patches.push(o),e.logger.log("BetterChatGestures: handleTapUsername patched successfully")}else e.logger.log("BetterChatGestures: handleTapUsername not patched (not found or disabled)");if(a.handleTapMessage){e.logger.log("BetterChatGestures: Patching handleTapMessage");const o=N.after("handleTapMessage",a,function(n){try{if(e.logger.log("BetterChatGestures: handleTapMessage intercepted (after)"),!n?.[0])return;const{nativeEvent:c}=n[0];if(!c)return;const u=c.channelId,g=c.messageId;if(!u||!g)return;const d=$?.getChannel(u),l=P?.getMessage(u,g);if(!l)return;s.currentMessageID===g?s.currentTapIndex++:(s.resetTapState(),s.currentTapIndex=1,s.currentMessageID=g),e.logger.log("BetterChatGestures: Tap count:",s.currentTapIndex,"on message:",g);let h=1e3;if(t.storage.delay){const Y=parseInt(t.storage.delay,10);!isNaN(Y)&&Y>=200&&(h=Y)}s.timeoutTap&&clearTimeout(s.timeoutTap),s.timeoutTap=setTimeout(function(){s.resetTapState()},h);const i=w?.getCurrentUser(),T=i&&l.author?l.author.id===i.id:!1,V={...c,taps:s.currentTapIndex,content:l.content||"",authorId:l.author?.id,isAuthor:T};if(s.currentTapIndex!==2){s.doubleTapState({state:"INCOMPLETE",nativeEvent:V});return}e.logger.log("BetterChatGestures: DOUBLE TAP DETECTED!");const ne=s.currentMessageID;s.resetTapState(),T?t.storage.userEdit?(e.logger.log("BetterChatGestures: Starting edit (slow tap)"),K?.startEditMessage(u,ne,V.content)):t.storage.reply&&d&&(e.logger.log("BetterChatGestures: Creating reply (slow tap)"),A?.createPendingReply({channel:d,message:l,shouldMention:!0})):t.storage.reply&&d&&(e.logger.log("BetterChatGestures: Creating reply for other user (slow tap)"),A?.createPendingReply({channel:d,message:l,shouldMention:!0})),s.openKeyboard(),s.doubleTapState({state:"COMPLETE",nativeEvent:V})}catch(c){e.logger.error("BetterChatGestures: Error in handleTapMessage patch",c),s.resetTapState()}});this.patches.push(o),e.logger.log("BetterChatGestures: handleTapMessage patched successfully")}else e.logger.warn("BetterChatGestures: handleTapMessage not found in handlers");this.unpatchHandlers=function(){try{e.logger.log("BetterChatGestures: Unpatching handlers, patch count:",s.patches.length),s.patches.forEach(function(o){typeof o=="function"&&o()}),s.patches=[],s.handlersInstances=new WeakSet,e.logger.log("BetterChatGestures: All handlers unpatched")}catch(o){e.logger.error("BetterChatGestures: Error in unpatchHandlers",o)}}}catch(o){e.logger.error("BetterChatGestures: Error in patchHandlers",o)}},onLoad(){var a,s,o,n,c,u;try{if(e.logger.log("BetterChatGestures: onLoad called"),!m){e.logger.error("BetterChatGestures: MessagesHandlers module not found! Plugin will not work.");return}(a=t.storage).tapUsernameMention??(a.tapUsernameMention=r.ReactNative.Platform.select({android:!1,ios:!0,default:!0})),r.ReactNative.Platform.OS==="android"&&(t.storage.tapUsernameMention=!1),(s=t.storage).reply??(s.reply=!0),(o=t.storage).userEdit??(o.userEdit=!0),(n=t.storage).keyboardPopup??(n.keyboardPopup=!0),(c=t.storage).delay??(c.delay="1000"),(u=t.storage).debugMode??(u.debugMode=!1),(!t.storage.delay||t.storage.delay===""||isNaN(parseInt(t.storage.delay,10))||parseInt(t.storage.delay,10)<200)&&(t.storage.delay="1000"),e.logger.log("BetterChatGestures: Configuration:",{reply:t.storage.reply,userEdit:t.storage.userEdit,keyboardPopup:t.storage.keyboardPopup,delay:t.storage.delay,tapUsernameMention:t.storage.tapUsernameMention,debugMode:t.storage.debugMode});const g=this,d=["params","handlers","_params","messageHandlers"];let l=null,h=null;e.logger.log("BetterChatGestures: Searching for property name...");for(const i of d)if(l=Object.getOwnPropertyDescriptor(m.prototype,i)?.get,l){h=i,e.logger.log(`BetterChatGestures: Found property '${i}'`);break}if(!l||!h){e.logger.error("BetterChatGestures: Could not find params getter! Trying to list all properties...");try{const i=Object.getOwnPropertyNames(m.prototype);e.logger.log("BetterChatGestures: Available properties:",i);for(const T of i)Object.getOwnPropertyDescriptor(m.prototype,T)?.get&&e.logger.log(`BetterChatGestures: Property '${T}' has a getter`)}catch(i){e.logger.error("BetterChatGestures: Failed to list properties",i)}return}e.logger.log("BetterChatGestures: Setting up getter intercept..."),Object.defineProperty(m.prototype,h,{configurable:!0,get(){e.logger.log("BetterChatGestures: Getter called, this =",!!this);const i=l.call(this);return e.logger.log("BetterChatGestures: Got handlers from original getter:",!!i),this&&i?(e.logger.log("BetterChatGestures: Calling patchHandlers from getter"),g.patchHandlers.call(g,i)):e.logger.warn("BetterChatGestures: Skipping patchHandlers (this or handlers is null)"),i}}),e.logger.log("BetterChatGestures: Getter intercept set up successfully"),this.unpatchGetter=function(){try{e.logger.log("BetterChatGestures: Restoring original getter"),l&&h&&Object.defineProperty(m.prototype,h,{configurable:!0,get:l})}catch(i){e.logger.error("BetterChatGestures: Error in unpatchGetter",i)}},e.logger.log("BetterChatGestures: onLoad completed successfully")}catch(g){e.logger.error("BetterChatGestures: Error in onLoad",g)}},onUnload(){try{e.logger.log("BetterChatGestures: onUnload called"),this.resetTapState(),this.unpatchGetter&&this.unpatchGetter(),this.unpatchHandlers&&this.unpatchHandlers(),this.timeoutTap&&(clearTimeout(this.timeoutTap),this.timeoutTap=null),e.logger.log("BetterChatGestures: onUnload completed")}catch(a){e.logger.error("BetterChatGestures: Error in onUnload",a)}},settings:se};return L.default=oe,Object.defineProperty(L,"__esModule",{value:!0}),L})({},vendetta.metro,vendetta.metro.common,vendetta.patcher,vendetta.plugin,vendetta.ui.components,vendetta.storage,vendetta.ui.assets,vendetta.ui,vendetta);
